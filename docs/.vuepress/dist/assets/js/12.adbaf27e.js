(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{216:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"字符集与编码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符集与编码"}},[t._v("#")]),t._v(" 字符集与编码")]),t._v(" "),a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),a("p",[t._v("为什么是字符集编码而不是字符编码呢？看完本文后你会有一个清晰的理解。本文讲述的内容：")]),t._v(" "),a("ul",[a("li",[t._v("ASCII码")]),t._v(" "),a("li",[t._v("字符与字节")]),t._v(" "),a("li",[t._v("字节与二进制、八进制与十六进制的关系")]),t._v(" "),a("li",[t._v("Unicode字符集、码点与编码")]),t._v(" "),a("li",[t._v("utf-16编码与字节序")]),t._v(" "),a("li",[t._v("utf-8编码")]),t._v(" "),a("li",[t._v("ucs-2编码")]),t._v(" "),a("li",[t._v("js使用的编码")]),t._v(" "),a("li",[t._v("ES6的Unicode支持")])]),t._v(" "),a("h2",{attrs:{id:"ascii码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ascii码"}},[t._v("#")]),t._v(" ASCII码")]),t._v(" "),a("p",[t._v("讲编码的概念，当然得从计算机的起源开始说起了，就好比每当说到中国神话故事，都得从盘古开天的时候讲述一样。")]),t._v(" "),a("p",[t._v("美国人发明的计算机，那当然最开始的编码是从英文字母开始的，此时的编码是处理英文字母、数字、符号与二进制的对应关系，数量不多，128个足够表示全部了。此时，这128个对应关系的定义所得到的编码就被称为ASCII码。")]),t._v(" "),a("h2",{attrs:{id:"字符与字节"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符与字节"}},[t._v("#")]),t._v(" 字符与字节")]),t._v(" "),a("p",[t._v("字符与字节在我的上一篇文章有提及，字符是什么呢，字符就是我们在计算机上说看到的，比如"),a("code",[t._v("'a', '你', 👿")]),t._v("等等。")]),t._v(" "),a("p",[t._v("对于ASCII码，上节提到128种编码分别对应128个字符，这被称为单字节字符，也就是说一个字符代表占用一个字节。")]),t._v(" "),a("p",[t._v("对于非单字节字符，像"),a("code",[t._v("emoji")]),t._v("表情，是4个字节组成（为什么是4个后面会说）。也就是说，一个字符可能由多个字节组成，这依赖于对应的编码方式。")]),t._v(" "),a("h2",{attrs:{id:"字节与二进制、八进制与十六进制的关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字节与二进制、八进制与十六进制的关系"}},[t._v("#")]),t._v(" 字节与二进制、八进制与十六进制的关系")]),t._v(" "),a("p",[t._v("1个字节由8位二进制组成，总共对应"),a("code",[t._v("0000 0000")]),t._v(" ~ "),a("code",[t._v("1111 1111")]),t._v("256种状态。前面说的"),a("code",[t._v("ASCII码")]),t._v("就\n是其中的"),a("code",[t._v("0000 0000")]),t._v(" ~ "),a("code",[t._v("0111 1111")]),t._v("128种。")]),t._v(" "),a("p",[t._v("我们知道十六进制是用"),a("code",[t._v("0-9 a-f")]),t._v("来表示，最大15用二进制来表示即"),a("code",[t._v("1111")]),t._v("，由于1个字节有8位，所以需要2个十六进制数才能代表一个字节，即"),a("code",[t._v("00")]),t._v(" ~ "),a("code",[t._v("ff")]),t._v("才能代表一个字节的范围。")]),t._v(" "),a("p",[t._v("那八进制与字节的关系如何呢？")]),t._v(" "),a("p",[t._v("八进制最大为7，即"),a("code",[t._v("111")]),t._v("，我们会发现需要3位八进制才能表示一个字节"),a("code",[t._v("111 111 111")]),t._v("，但是又多了一位，此时该如何解释？我没弄懂。。。⚠️")]),t._v(" "),a("p",[t._v("在js中，普通的书写数字一般都是十进制的格式，如果在数字前加"),a("code",[t._v("0")]),t._v("，则代表八进制数，加"),a("code",[t._v("0x")]),t._v("，代表十六进制数。")]),t._v(" "),a("p",[t._v("进制的互相转换只需要讲对应的数字转换成相应的进制来表示，比如十进制"),a("code",[t._v("110")]),t._v(":")]),t._v(" "),a("ul",[a("li",[t._v("转换为二进制\n"),a("ul",[a("li",[t._v("转换过程为100转化为二进制 "),a("code",[t._v("(100).toString(2)")]),t._v(" "),a("code",[t._v("1100100")])]),t._v(" "),a("li",[t._v("10转化为二进制 "),a("code",[t._v("1010")])]),t._v(" "),a("li",[t._v("结合起来就是"),a("code",[t._v("1101110")])])])]),t._v(" "),a("li",[t._v("转化为八进制\n"),a("ul",[a("li",[t._v("转换过程为100转化为八进制 "),a("code",[t._v("(100).toString(8)")]),t._v(" "),a("code",[t._v("144")])]),t._v(" "),a("li",[t._v("10转化为八进制 "),a("code",[t._v("12")])]),t._v(" "),a("li",[t._v("结合起来就是"),a("code",[t._v("156")])])])]),t._v(" "),a("li",[t._v("同理转化为十六进制")])]),t._v(" "),a("p",[t._v("计算机内都是以二进制的形式存储，八进制与十六进制其实只是人们对二进制的一种简化写法，因为当数值越来越大时，书写起来，会需要很长很长，为了方便使用，就新增了八进制与十六进制等表现形式。")]),t._v(" "),a("h2",{attrs:{id:"unicode字符集、码点与编码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unicode字符集、码点与编码"}},[t._v("#")]),t._v(" Unicode字符集、码点与编码")]),t._v(" "),a("p",[t._v("我们上面说到"),a("code",[t._v("ASCII码")]),t._v("只是代表了二进制8位中的前7位127个字符，在"),a("code",[t._v("Unicode")]),t._v("还未诞生之前，各个国家是自己编码对应的字符，例如我国就有"),a("code",[t._v("gb2312")]),t._v("，2个字节对应一个字符，具体不深入。")]),t._v(" "),a("p",[t._v("汉字就有好几万，再加上世界上这么多语言，为了统一字符编码，"),a("code",[t._v("Unicode")]),t._v("就应运而生了，计算机只使用这一种字符集，就不会出现乱码了。")]),t._v(" "),a("p",[t._v("码点"),a("code",[t._v("Code Point")]),t._v("组成了"),a("code",[t._v("Unicode")]),t._v("的字符集，码点的表示法是"),a("code",[t._v("U+0000")]),t._v("即4位十六进制，那它代表的字符范围是"),a("code",[t._v("0000")]),t._v(" ~ "),a("code",[t._v("ffff")]),t._v("共65535个。")]),t._v(" "),a("p",[a("strong",[t._v("我们要着重理解的是，"),a("code",[t._v("Unicode")]),t._v("字符集不是编码，即没有规定多字节字符如何存储，而实现这种存储的方式是utf-8和utf-16等")]),t._v("。")]),t._v(" "),a("p",[a("strong",[t._v("BMP/SMP")])]),t._v(" "),a("p",[a("code",[t._v("Unicode")]),t._v("的码点范围是"),a("code",[t._v("U+0000")]),t._v(" ~ "),a("code",[t._v("U+10ffff")]),t._v("，前面说到的"),a("code",[t._v("U+0000")]),t._v(" ~ "),a("code",[t._v("U+ffff")]),t._v("共65535代表BMP基本平面，最常见字符都在这个范围内，我们知道2个十六进制代表一个字节，那基本平面的字符都是由2个字节组合表示的。")]),t._v(" "),a("p",[t._v("基本平面以外的，"),a("code",[t._v("U+010000")]),t._v(" ~ "),a("code",[t._v("U+10ffff")]),t._v("共"),a("code",[t._v("0x10")]),t._v("16个平面称为补充平面SMP，用来表示常见字符以外的字符，例如emoji表情。")]),t._v(" "),a("p",[a("code",[t._v("Unicode")]),t._v("共代表了"),a("code",[t._v("U+10ffff")]),t._v("110万多个字符。")]),t._v(" "),a("h2",{attrs:{id:"utf-16编码与字节序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#utf-16编码与字节序"}},[t._v("#")]),t._v(" utf-16编码与字节序")]),t._v(" "),a("p",[a("code",[t._v("Unicode")]),t._v("是采用十六进制来表示的，那一个utf-16编码的字符看起来就是这样的"),a("code",[t._v("0x597d")]),t._v("和"),a("code",[t._v("Unicode")]),t._v("差不多，一个是"),a("code",[t._v("u+")]),t._v("，另一个是"),a("code",[t._v("0x")]),t._v("，在js中，用"),a("code",[t._v("\\u")]),t._v("表示。")]),t._v(" "),a("p",[t._v("例如，汉字"),a("code",[t._v("我")]),t._v("的十六进制编码:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charCodeAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 基本平面内对应unicode的码点")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 25105")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25105")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 转换为16进制")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "6211"')]),t._v("\n")])])]),a("p",[t._v("对应的十六进制编码为'0x6211'，也就是说"),a("code",[t._v("'\\u6211' === '我'")])]),t._v(" "),a("p",[t._v("那计算机为啥知道6211就是字符“我”而不是1162，因为62和11是2个字节，这就涉及到了"),a("strong",[t._v("字节序")]),t._v("的问题，也就是我们说的文件BOM头。")]),t._v(" "),a("p",[t._v("有2个术语"),a("code",[t._v("Big endian")]),t._v("和"),a("code",[t._v("Little endian")]),t._v("，称为“大头”和“小头”，这里可以理解为62是大头，11是小头。")]),t._v(" "),a("blockquote",[a("p",[t._v('Unicode 规范定义，每一个文件的最前面分别加入一个表示编码顺序的字符，这个字符的名字叫做"零宽度非换行空格"（zero width no-break space），用FEFF表示。这正好是两个字节，而且FF比FE大1。')]),t._v(" "),a("p",[t._v("如果一个文本文件的头两个字节是FE FF，就表示该文件采用大头方式；如果头两个字节是FF FE，就表示该文件采用小头方式。")])]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("上面字符“我”在基本平面是2个字节表示，那么补充平面的内的字符是几个呢？答案是4个字节，为什么这么说呢？")]),t._v(" "),a("p",[t._v("当码点大于"),a("code",[t._v("U+ffff")]),t._v("的字符求长度时：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("🐷")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n")])])]),a("p",[t._v("这说明SMP补充平面的字符是由2个BMP基本平面的字符组成，因为基本平面的一个字符长度就是1。而基本平面的字符由2个字节组成，那补充平面很显然是4个字节组成了。")]),t._v(" "),a("p",[t._v("上面我们说unicode和十六进制表现形式只有前面符号的区别，其实它们之间是有转码公式对应的：")]),t._v(" "),a("ul",[a("li",[t._v("基本平面"),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("u"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("597")]),t._v("d "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x597d")]),t._v("\n")])])])]),t._v(" "),a("li",[t._v("补充平面"),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("H")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("floor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("码点"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x10000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x400")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xD800")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("L")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("码点 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x10000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x400")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xDC00")]),t._v("\n")])])])])]),t._v(" "),a("p",[t._v("求码点")]),t._v(" "),a("ul",[a("li",[t._v("基本平面 "),a("code",[t._v("charCodeAt()")])]),t._v(" "),a("li",[t._v("补充平面 "),a("code",[t._v("codePointAt()")])])]),t._v(" "),a("p",[t._v("例如"),a("code",[t._v("🐷")]),t._v("这个emoji表情求码点")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'🐷'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("codePointAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 128055 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 转为十六进制后再带入公式")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (128055).toString(16) = '1f437' ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 那么高位H和低位L分别为")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("H")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("floor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x1f437")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x10000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x400")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xD800")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// d83d")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("L")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x1f437")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x10000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x400")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xDC00")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// dc37")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\ud83d\\udc37'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'🐷'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),a("p",[t._v("从上面的栗子中，我们可以进一步说明SMP的字符是由4个字节组成的。")]),t._v(" "),a("p",[t._v("那计算机如何知道这4个字节放在一起就是SMP的字符而不是2个BMP的字符呢？")]),t._v(" "),a("p",[t._v("其实高位H和低位L在BMP中也是有对应关系的：")]),t._v(" "),a("ul",[a("li",[t._v("高位H的范围是 "),a("code",[t._v("0xd800")]),t._v(" ~ "),a("code",[t._v("0xdbff")]),t._v("，空间大小为2^10 = 1024")]),t._v(" "),a("li",[t._v("低位L的范围是 "),a("code",[t._v("0xdc00")]),t._v(" ~ "),a("code",[t._v("0xdfff")]),t._v("，空间大小为2^10 = 1024")])]),t._v(" "),a("p",[t._v("那组合起来的总空间为2^20 = 1048576，这恰恰和SMP平面范围"),a("code",[t._v("U+010000")]),t._v(" ~ "),a("code",[t._v("U+10ffff")]),t._v("所表示的范围一致，即"),a("code",[t._v("0x10ffff - 0x010000 = 1048575")])]),t._v(" "),a("p",[t._v("所以，当我们取长度时，可以匹配基本平面的高位和低位段，从而判断是否是SMP字符，进一步处理长度。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" regexAstralSymbols "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("countSymbols")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("_string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" bmpString "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regexAstralSymbols"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'_'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" bmpString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("countSymbols")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'🐷'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n")])])]),a("h2",{attrs:{id:"utf-8编码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#utf-8编码"}},[t._v("#")]),t._v(" utf-8编码")]),t._v(" "),a("p",[t._v("UTF-8 就是在互联网上使用最广的一种 Unicode 的实现方式，使用可变字节来标示BMP、SMP 的字符。")]),t._v(" "),a("p",[t._v("unicode与utf-8也有一套对照关系")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("unicode")]),t._v(" "),a("th",[t._v("utf-8")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("0000 - 007F")]),t._v(" "),a("td",[t._v("0xxxxxxx")])]),t._v(" "),a("tr",[a("td",[t._v("0080 - 07FF")]),t._v(" "),a("td",[t._v("110xxxxx 10xxxxxx")])]),t._v(" "),a("tr",[a("td",[t._v("0800 - FFFF")]),t._v(" "),a("td",[t._v("1110xxxx 10xxxxxx 10xxxxxx")])])])]),t._v(" "),a("p",[t._v("例如，“我”字的unicode码点为“6211”")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charCodeAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "6211"')]),t._v("\n")])])]),a("p",[t._v("由于"),a("code",[t._v("0x6211 > 0x0800")]),t._v("的，所以对应的utf-8为3个字节，将"),a("code",[t._v("6211")]),t._v("转成二进制为:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (0x6211).toString(2)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0110")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0010")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0001")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0001")]),t._v("\n")])])]),a("p",[t._v("用对应的模版补齐则是：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11100110")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10001000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10010001")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// e  6     8  8    9   1  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 四位二进制代表一位十六进制")]),t._v("\n")])])]),a("p",[t._v("这就得到了“我”字的utf-8编码，转成十六进制"),a("code",[t._v("e68891")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"ucs-2编码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ucs-2编码"}},[t._v("#")]),t._v(" ucs-2编码")]),t._v(" "),a("p",[t._v("在js语言还未诞生之前，ucs-2就已经发布了，它只支持2个字节组成的字符，并不支持4个，因为在涉及之初认为已经够用了，鬼想到还会出现类似emoji这样的东西。")]),t._v(" "),a("p",[t._v("发展历史")]),t._v(" "),a("ul",[a("li",[t._v("ucs-2发布")]),t._v(" "),a("li",[t._v("js诞生")]),t._v(" "),a("li",[t._v("js解释器引擎诞生")]),t._v(" "),a("li",[t._v("utf-16发布")])]),t._v(" "),a("p",[t._v("也就是说ucs-2是不支持由4个字节也就是SMP平面的字符。理所当然的在BMP中也不会存在高位和低位码点段来映射SMP。")]),t._v(" "),a("p",[t._v("但是utf-16是完全兼容ucs-2的。那js到底是使用的utf-16还是ucs-2呢？")]),t._v(" "),a("h2",{attrs:{id:"js使用的编码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js使用的编码"}},[t._v("#")]),t._v(" js使用的编码")]),t._v(" "),a("p",[a("strong",[t._v("1. 对js文件解析时")])]),t._v(" "),a("p",[t._v("js在编译前需要将文件中的内容按照一定的编码读取成字符串")]),t._v(" "),a("p",[t._v("解码使用的编码方案按优先级高到低由下面几个方面来决定：")]),t._v(" "),a("ul",[a("li",[t._v("如果文件有BOM 标记，则会使用对应的Unicode 编码，比如FFFE、FEFF 就会使用UTF-16。这就是上面提到的“大头”“小头”定义的文件字节序。")]),t._v(" "),a("li",[t._v("由HTTP(S)请求的相应头来决定，比如："),a("br"),t._v(" "),a("code",[t._v("Content-Type: application/javascript; charset=utf-8")])]),t._v(" "),a("li",[t._v("由"),a("script"),t._v(" 标签的charset 属性决定，比如："),a("br"),t._v(" "),a("code",[t._v('<script charset="utf-8" src="./main.js"><\/script>')])]),t._v(" "),a("li",[t._v("由html 本身的charset 决定，比如："),a("br"),t._v(" "),a("code",[t._v('<meta charset="UTF-8">')])])]),t._v(" "),a("p",[t._v("此处复制于"),a("a",{attrs:{href:"https://github.com/SamHwang1990/blog/issues/2",target:"_blank",rel:"noopener noreferrer"}},[t._v("Javascript 与字符编码"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("strong",[t._v("2. 编译与运行时")])]),t._v(" "),a("p",[t._v("Javascript 引擎总会尝试把源码转成UTF-16 编码的文本，对于这个定义的探究，便只能查看官方定义，此处参考"),a("a",{attrs:{href:"https://github.com/SamHwang1990/blog/issues/2",target:"_blank",rel:"noopener noreferrer"}},[t._v("Javascript 与字符编码"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("总结来说，js语言本身采用UCS-2来实现这是事实")]),t._v(" "),a("ul",[a("li",[t._v("编译时现在的引擎都会采用utf-16")]),t._v(" "),a("li",[t._v("运行时可能既有ucs-2，又有utf-16")])]),t._v(" "),a("p",[t._v("过分去深究这个问题似乎没有多少意义，因为二者所表现的特性都是utf-16所表现的。")]),t._v(" "),a("h2",{attrs:{id:"es6的unicode支持"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6的unicode支持"}},[t._v("#")]),t._v(" ES6的Unicode支持")]),t._v(" "),a("p",[t._v("我们先来看看unicode的坑")]),t._v(" "),a("h3",{attrs:{id:"_1-对于smp字符获取长度为2上面已经提到了"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-对于smp字符获取长度为2上面已经提到了"}},[t._v("#")]),t._v(" 1. 对于SMP字符获取长度为2上面已经提到了")]),t._v(" "),a("h3",{attrs:{id:"_2-字符串的反转"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-字符串的反转"}},[t._v("#")]),t._v(" 2. 字符串的反转")]),t._v(" "),a("p",[t._v("正常情况下，反转一个字符串")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reverse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("那遇到SMP字符就肯定错了，因为它会将SMP字符的2个十六进制对也反转了")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'🐷'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reverse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "��"')]),t._v("\n")])])]),a("h3",{attrs:{id:"_3-字符与码点的互转"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-字符与码点的互转"}},[t._v("#")]),t._v(" 3. 字符与码点的互转")]),t._v(" "),a("p",[t._v("在BMP范围内，互转是没有问题的")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charCodeAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 6211")]),t._v("\nString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromCharCode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x6211")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 我")]),t._v("\n")])])]),a("p",[t._v("但是SMP就不行了，取码点要将2个十六进制对都取出来")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'💩'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charCodeAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// d83d ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'💩'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charCodeAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// dca9")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 同样的反转时也是一样")]),t._v("\nString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromCharCode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xD83D")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xDCA9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '💩'")]),t._v("\n")])])]),a("h3",{attrs:{id:"_4-正则匹配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-正则匹配"}},[t._v("#")]),t._v(" 4. 正则匹配")]),t._v(" "),a("p",[t._v("正则匹配符"),a("code",[t._v(".")]),t._v("只能匹配单个“字符”，那很明显SMP字符是匹配不到的。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/foo.bar/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo💩bar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])]),a("h3",{attrs:{id:"_5-字符串遍历"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-字符串遍历"}},[t._v("#")]),t._v(" 5. 字符串遍历")]),t._v(" "),a("p",[t._v("这也是一个很明显的问题，比较直接的办法是：")]),t._v(" "),a("p",[t._v("遍历字符串，用"),a("code",[t._v("charCodeAt")]),t._v("转成码点后存放进临时数组，然后再遍历这个由码点组成的临时数组，判断码点在高位和低位段的认为是SMP对应的码点映射。")]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"针对上述问题，es6填坑了"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#针对上述问题，es6填坑了"}},[t._v("#")]),t._v(" 针对上述问题，es6填坑了")]),t._v(" "),a("ul",[a("li",[t._v("长度问题还是需要用正则匹配高位和低位码点，将对应的字符替换为BMP中的任意字符即可。")]),t._v(" "),a("li",[t._v("字符串的反转，可以使用"),a("code",[t._v("Array.from()")]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'这是一坨💩'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reverse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "💩坨一是这"')]),t._v("\n")])])])]),t._v(" "),a("li",[t._v("码点的互转，使用"),a("code",[t._v("codePointAt")]),t._v("和"),a("code",[t._v("fromCodePoint")]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("codePointAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 6211")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'💩'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("codePointAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1f4a9")]),t._v("\nString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromCodePoint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x1f4a9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "💩"')]),t._v("\n")])])])]),t._v(" "),a("li",[t._v("正则匹配"),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/foo.bar/u")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo💩bar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])])]),t._v(" "),a("li",[t._v("字符串遍历 "),a("code",[t._v("let ... of")])])]),t._v(" "),a("h2",{attrs:{id:"结语"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结语"}},[t._v("#")]),t._v(" 结语")]),t._v(" "),a("p",[t._v("我们再回过头来看最初问的问题，为什么是字符集编码而不是字符。很显然，字符是编码后我们看到的结果，而不是要编码的内容，从最初的"),a("code",[t._v("ASCII码")]),t._v("字符集，"),a("code",[t._v("UCS")]),t._v("字符集，再到"),a("code",[t._v("Unicode")]),t._v("字符集，它们都是一种统一集合，而实现字符集编码的方式有多种："),a("code",[t._v("ucs-2")]),t._v("，"),a("code",[t._v("utf-16")]),t._v("，"),a("code",[t._v("utf-8")]),t._v("等等，我们讲编码方式，一定是讲的它们。")]),t._v(" "),a("artical-footer")],1)}),[],!1,null,null,null);s.default=e.exports}}]);